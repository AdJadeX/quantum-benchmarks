#!/bin/sh
FILE_PATH=$(readlink -f "$0")
BASE_PATH=$(dirname "$FILE_PATH")
ROOT_PATH="$BASE_PATH/.."

install() {
    # install Python dependencies
    echo "installing Python dependencies"
    pip install -r requirements.txt
    conda install mkl-service
    # install Julia dependencies
    echo "installing Julia dependencies"
    julia --project -e "using Pkg; Pkg.instantiate()"
}

benchmark(){
    # set threads to one
    export OMP_NUM_THREADS=1
    export MKL_NUM_THREADS=1
    export MKL_DOMAIN_NUM_THREADS=1
    export JULIA_NUM_THREADS=1

    # start benchmark
    ## 1.Cirq
    pytest cirq/benchmark_gates.py --benchmark-save=cirq --benchmark-sort=name --benchmark-min-rounds=1 > cirq.out
    ## 2.QISKit
    pytest qiskit/benchmarks.py --benchmark-save=qiskit --benchmark-sort=name --benchmark-min-rounds=1 > qiskit.out
    ## 3.ProjectQ
    pytest projectq/benchmark_gates.py --benchmark-save=projectq --benchmark-sort=name --benchmark-min-rounds=1 > projectq.out
    ## 4.Yao
    julia --project yao/benchmark_gates.jl yao.csv yao_qcbm.csv yao_qcbm_batch.csv > yao.out
    ## 5. PennyLane (default)
    pytest pennylane/benchmarks.py --benchmark-save=pennylane --benchmark-sort=name --benchmark-min-rounds=1 > pennylane.out
}

help() {
    echo "
    Quantum Circuit Simulation Benchmark

install     install dependencies
run         start benchmarking
help        print this message
"
}

echo $ROOT_PATH

case $1 in
    install) (cd $ROOT_PATH && install)
    ;;
    run) (cd $ROOT_PATH && benchmark)
    ;;
    *) help
    ;;
esac
